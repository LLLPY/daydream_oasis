# Generated by Django 4.1.5 on 2023-09-13 19:18

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, help_text='创建时间', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(default=datetime.datetime.now, help_text='最后修改时间', verbose_name='最后修改时间')),
                ('is_deleted', models.BooleanField(default=False, help_text='是否已删除', verbose_name='是否已删除')),
                ('desc', models.CharField(help_text='简介', max_length=300, verbose_name='简介')),
                ('ip', models.CharField(help_text='IP地址', max_length=50, verbose_name='IP地址')),
                ('mobile', models.CharField(help_text='手机', max_length=11, unique=True, verbose_name='手机')),
                ('avatar', models.URLField(default='image/default_user_avatar.png', help_text='头像', verbose_name='头像')),
                ('job', models.CharField(default='打工的人儿~', help_text='职业', max_length=20, verbose_name='职业')),
                ('longitude', models.FloatField(default=0, help_text='经度', verbose_name='经度')),
                ('latitude', models.FloatField(default=0, help_text='纬度', verbose_name='纬度')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, help_text='创建时间', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(default=datetime.datetime.now, help_text='最后修改时间', verbose_name='最后修改时间')),
                ('is_deleted', models.BooleanField(default=False, help_text='是否已删除', verbose_name='是否已删除')),
                ('desc', models.CharField(help_text='简介', max_length=300, verbose_name='简介')),
                ('ip', models.CharField(help_text='IP地址', max_length=50, verbose_name='IP地址')),
                ('content', models.CharField(help_text='内容', max_length=200, verbose_name='内容')),
                ('weight', models.PositiveIntegerField(default=0, help_text='权重', verbose_name='权重')),
                ('user', models.ForeignKey(help_text='留言人', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='留言人')),
            ],
            options={
                'verbose_name': '留言',
                'verbose_name_plural': '留言',
                'db_table': '留言',
                'ordering': ['-weight', '-create_time'],
            },
        ),
        migrations.CreateModel(
            name='ChatRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, help_text='创建时间', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(default=datetime.datetime.now, help_text='最后修改时间', verbose_name='最后修改时间')),
                ('is_deleted', models.BooleanField(default=False, help_text='是否已删除', verbose_name='是否已删除')),
                ('desc', models.CharField(help_text='简介', max_length=300, verbose_name='简介')),
                ('ip', models.CharField(help_text='IP地址', max_length=50, verbose_name='IP地址')),
                ('content', models.CharField(help_text='内容', max_length=1000, verbose_name='内容')),
                ('time', models.DateTimeField(default=datetime.datetime.now, help_text='时间', verbose_name='时间')),
                ('is_read', models.BooleanField(default=False, help_text='是否已读', verbose_name='是否已读')),
                ('receiver', models.ForeignKey(help_text='接收人', on_delete=django.db.models.deletion.CASCADE, related_name='接收人', to=settings.AUTH_USER_MODEL, verbose_name='接收人')),
                ('sender', models.ForeignKey(help_text='发送人', on_delete=django.db.models.deletion.CASCADE, related_name='发送人', to=settings.AUTH_USER_MODEL, verbose_name='发送人')),
            ],
            options={
                'verbose_name': '信息',
                'verbose_name_plural': '信息',
                'db_table': '信息',
                'ordering': ['create_time'],
            },
        ),
    ]
